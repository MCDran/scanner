{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Andrew\\\\Documents\\\\Projects\\\\HH 24'\\\\hauntbrunswick.com\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"C:\\\\Users\\\\Andrew\\\\Documents\\\\Projects\\\\HH 24'\\\\hauntbrunswick.com\",\"filename\":\"C:\\\\Users\\\\Andrew\\\\Documents\\\\Projects\\\\HH 24'\\\\hauntbrunswick.com\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"C:\\\\Users\\\\Andrew\\\\Documents\\\\Projects\\\\HH 24'\\\\hauntbrunswick.com\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.1:production":{"value":{"code":"\"use strict\";\n\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst mysql = require('mysql2');\nconst crypto = require('crypto'); // For generating registration numbers\nconst nodemailer = require('nodemailer');\nconst QRCode = require('qrcode');\nconst path = require('path');\nconst app = express();\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(express.static('public'));\napp.use(express.json());\n\n// MySQL connection setup\nconst connection = mysql.createConnection({\n  host: '100.87.150.78',\n  // 192.168.100.100\n  port: '3667',\n  user: 'valak',\n  password: 'SLEEP4tG',\n  database: 'MYSQL_DATABASE'\n});\nconnection.connect(err => {\n  if (err) {\n    console.error('Error connecting to MySQL:', err.stack);\n    return;\n  }\n  console.log('Connected to MySQL');\n});\nconnection.query('SELECT 1 + 1 AS solution', (err, results) => {\n  if (err) {\n    console.error('Error querying MySQL:', err.stack);\n  } else {\n    console.log('Test query successful, solution:', results[0].solution);\n  }\n});\nconst transporter = nodemailer.createTransport({\n  host: 'smtp.office365.com',\n  port: 587,\n  secure: false,\n  // Use TLS\n  auth: {\n    user: 'donotreply@hauntbrunswick.com',\n    // Your Office 365 email\n    pass: 'vsjwbdbfhvqrvyqw' // Your Office 365 app password\n  },\n\n  tls: {\n    rejectUnauthorized: false // This might help if there's an issue with the certificate\n  }\n});\n\nasync function sendRegistrationEmail(email, registrationNumber, timeSlot, names, viewUrl) {\n  // Generate the QR code\n  const qrCodeURL = await generateQRCode(registrationNumber, email);\n  const qrCodeData = `${registrationNumber}:${email}`;\n  const qrCodeBuffer = await QRCode.toBuffer(qrCodeData);\n  console.log(qrCodeURL);\n\n  // Email content with the embedded QR code\n  const emailContent = `\n        <h1>Thank you for registering!</h1>\n        <p>You have registered for the following time slot on <strong>Sunday, October 27th</strong>:</p>\n        <p>Time Slot: ${timeSlot}</p>\n        <p>Names of attendees: ${names.join(', ')}</p>\n        <p>You can view your registration details at <a href=\"${viewUrl}\">this link</a>.</p>\n        <p>Use the QR code below when checking in:</p>\n        <img src=\"cid:qrCode\" alt=\"QR Code\" />\n    `;\n\n  // Use Nodemailer to send the email (you likely have this setup already)\n  const mailOptions = {\n    from: 'donotreply@hauntbrunswick.com',\n    to: email,\n    subject: 'Your Haunted House Registration Confirmation',\n    html: emailContent,\n    attachments: [{\n      filename: 'qrcode.png',\n      content: qrCodeBuffer,\n      cid: 'qrCode' // Same CID as in the email content\n    }]\n  };\n\n  // Send the email\n  transporter.sendMail(mailOptions, (error, info) => {\n    if (error) {\n      console.error('Error sending email:', error);\n    } else {\n      console.log('Email sent: ' + info.response);\n    }\n  });\n}\nasync function generateQRCode(registrationNumber, email) {\n  try {\n    const qrCodeData = `${registrationNumber}:${email}`; // The data you want to encode in the QR code\n    const qrCodeURL = await QRCode.toDataURL(qrCodeData); // Generates a base64 image URL\n    return qrCodeURL;\n  } catch (err) {\n    console.error('Failed to generate QR Code', err);\n    throw err;\n  }\n}\napp.get('/checkin', (req, res) => {\n  res.sendFile(path.join(__dirname, 'public/checkin/index.html'));\n});\n\n// API route to handle QR code scan data\napp.post('/checkin', (req, res) => {\n  const {\n    registrationNumber,\n    email\n  } = req.body;\n\n  // Lookup logic: You would fetch the registrant's details from your database here.\n  // For now, let's simulate this with a simple check.\n\n  // Simulated registrant data (replace this with actual database lookup)\n  const mockRegistrant = {\n    registrationNumber: '123456',\n    email: 'user@example.com',\n    name: 'John Doe',\n    timeSlot: '7:00 PM'\n  };\n\n  // Check if the scanned data matches the mock registrant data\n  if (registrationNumber === mockRegistrant.registrationNumber && email === mockRegistrant.email) {\n    res.status(200).json({\n      success: true,\n      message: 'Registrant found!',\n      registrant: mockRegistrant\n    });\n  } else {\n    res.status(404).json({\n      success: false,\n      message: 'Registrant not found!'\n    });\n  }\n});\n\n// In-memory storage of available spots (this could also be in the database)\nlet availableSlots = {\n  '6:00 PM': 20,\n  '6:15 PM': 20,\n  '6:30 PM': 20,\n  '6:45 PM': 20,\n  '7:00 PM': 20,\n  '7:15 PM': 20,\n  '7:30 PM': 20,\n  '7:45 PM': 20,\n  '8:00 PM': 20,\n  '8:15 PM': 20,\n  '8:30 PM': 20,\n  '8:45 PM': 20\n};\nfunction generateRegistrationNumber() {\n  const now = new Date();\n  const day = String(now.getDate()).padStart(2, '0'); // DD\n  const month = String(now.getMonth() + 1).padStart(2, '0'); // MM\n  const year = String(now.getFullYear()).slice(-2); // YY\n  const randomFourDigits = Math.floor(1000 + Math.random() * 9000);\n  return `LC-${day}${month}${year}-${randomFourDigits}`;\n}\n\n//View registration\napp.post('/view-registration', (req, res) => {\n  const {\n    registration_number,\n    email\n  } = req.body;\n\n  // Query to find the registration based on registration number and email\n  const sql = 'SELECT * FROM registrations WHERE registration_number = ? AND email = ?';\n  connection.query(sql, [registration_number, email], (err, results) => {\n    if (err || results.length === 0) {\n      return res.send(`\n                <head>\n                    <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                    <title>No Registration Found</title>\n                </head>\n                <h1>No Registration Found</h1>\n                <p>We couldn't find a registration with that number and email.</p>\n                <a href=\"/view.html\">Try again</a>\n            `);\n    }\n    const registration = results[0];\n    const namesArray = registration.names.split(', ');\n    const agesArray = registration.ages.split(', ');\n    let registrationDetails = `\n            <head>\n                <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                <title>Modify Registration</title>\n            </head>\n            <h2>Registration Details</h2>\n            <p>Registration Number: ${registration.registration_number}</p>\n            <p>Email: ${registration.email}</p>\n            <p>Time Slot: ${registration.time_slot}</p>\n            <form id=\"modify-form\" action=\"/modify-registration\" method=\"POST\">\n                <input type=\"hidden\" name=\"registration_number\" value=\"${registration.registration_number}\">\n                <input type=\"hidden\" name=\"email\" value=\"${registration.email}\">\n        `;\n\n    // Generate attendee fields for modification\n    namesArray.forEach((name, index) => {\n      registrationDetails += `\n                <div class=\"attendee\" id=\"attendee-${index + 1}\">\n                    <label for=\"name${index + 1}\">Name:</label>\n                    <input type=\"text\" id=\"name${index + 1}\" name=\"names[]\" value=\"${name}\" required>\n                    <label for=\"age${index + 1}\">Age:</label>\n                    <select id=\"age${index + 1}\" name=\"ages[]\" required>\n                        <option value=\"16-20\" ${agesArray[index] === '16-20' ? 'selected' : ''}>16-20</option>\n                        <option value=\"21-30\" ${agesArray[index] === '21-30' ? 'selected' : ''}>21-30</option>\n                        <option value=\"31-40\" ${agesArray[index] === '31-40' ? 'selected' : ''}>31-40</option>\n                        <option value=\"41-50\" ${agesArray[index] === '41-50' ? 'selected' : ''}>41-50</option>\n                        <option value=\"51+\" ${agesArray[index] === '51+' ? 'selected' : ''}>51+</option>\n                    </select>\n                    <button type=\"button\" onclick=\"removeAttendee(${index + 1})\">Remove</button>\n                </div>\n            `;\n    });\n\n    // Add \"Remove All\" button and submit button\n    registrationDetails += `\n                <button type=\"button\" onclick=\"confirmRemoveAll()\">Remove All</button>\n                <button class=\"button\" type=\"submit\">Submit Changes</button>\n            </form>\n\n            <script>\n                // Function to remove individual attendees\n                function removeAttendee(index) {\n                    const attendeeElement = document.getElementById('attendee-' + index);\n                    attendeeElement.remove();\n                }\n\n                // Function to confirm removing all attendees\n                function confirmRemoveAll() {\n                    const attendeeElements = document.querySelectorAll('.attendee');\n\n                    if (attendeeElements.length === 0) {\n                        alert(\"No registrants to remove.\");\n                        return;\n                    }\n\n                    const confirmed = confirm(\"Are you sure you want to remove all registrants?\");\n                    if (confirmed) {\n                        attendeeElements.forEach(attendee => attendee.remove());\n                    }\n                }\n            </script>\n        `;\n\n    // Return the registration details to the user\n    res.send(registrationDetails);\n  });\n});\napp.post('/modify-registration', (req, res) => {\n  const {\n    registration_number,\n    email,\n    names,\n    ages\n  } = req.body;\n\n  // Query to find the existing registration before making changes\n  const sqlFind = 'SELECT * FROM registrations WHERE registration_number = ? AND email = ?';\n  connection.query(sqlFind, [registration_number, email], (err, results) => {\n    if (err || results.length === 0) {\n      return res.send(`\n                <head>\n                    <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                    <title>No Registration Found</title>\n                </head>\n                <h1>No Registration Found</h1>\n                <p>We couldn't find a registration with that number and email.</p>\n                <a href=\"/view.html\">Try again</a>\n            `);\n    }\n    const registration = results[0];\n    const existingRegistrantCount = registration.names ? registration.names.split(', ').length : 0;\n\n    // If 'names' array is undefined or empty, delete the registration and add spots back to the time slot\n    if (!names || names.length === 0) {\n      const sqlDelete = 'DELETE FROM registrations WHERE registration_number = ? AND email = ?';\n      connection.query(sqlDelete, [registration_number, email], err => {\n        if (err) {\n          return res.send(`\n                        <head>\n                            <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                            <title>Removal Failed</title>\n                        </head>\n                        <h1>Error</h1>\n                        <p>There was an issue removing your registration. Please try again later.</p>\n                        <a href=\"/view.html\">Go back</a>\n                    `);\n        }\n\n        // Add back all spots when registration is removed\n        const sqlUpdateSpots = 'UPDATE time_slots SET spots_remaining = spots_remaining + ? WHERE time_slot = ?';\n        connection.query(sqlUpdateSpots, [existingRegistrantCount, registration.time_slot], err => {\n          if (err) {\n            return res.send(`\n                            <head>\n                                <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                                <title>Error Updating</title>\n                            </head>\n                            <h1>Error Updating Spots</h1>\n                            <p>There was an issue updating the available spots for the time slot.</p>\n                            <a href=\"/\">Go back to the home page</a>\n                        `);\n          }\n          res.send(`\n                        <head>\n                            <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                            <title>Registration Removed</title>\n                        </head>\n                        <h1>Registration Removed</h1>\n                        <p>Your registration has been successfully removed.</p>\n                        <a href=\"/\">Go back to the home page</a>\n                    `);\n        });\n      });\n    } else {\n      // Calculate the difference in registrant count (if any registrants were added or removed)\n      const newRegistrantCount = names.length;\n      const difference = existingRegistrantCount - newRegistrantCount;\n\n      // Safeguard for undefined names or ages when joining\n      const namesString = names && names.length ? names.join(', ') : '';\n      const agesString = ages && ages.length ? ages.join(', ') : '';\n      const sqlUpdate = `\n                UPDATE registrations\n                SET names = ?, ages = ?\n                WHERE registration_number = ? AND email = ?\n            `;\n      connection.query(sqlUpdate, [namesString, agesString, registration_number, email], err => {\n        if (err) {\n          return res.send(`\n                        <head>\n                            <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                            <title>Update Failed</title>\n                        </head>\n                        <h1>Update Failed</h1>\n                        <p>There was an issue updating your registration. Please try again later.</p>\n                        <a href=\"/view.html\">Go back</a>\n                    `);\n        }\n\n        // Update spots remaining based on the difference in registrants\n        if (difference !== 0) {\n          const sqlUpdateSpots = 'UPDATE time_slots SET spots_remaining = spots_remaining + ? WHERE time_slot = ?';\n          connection.query(sqlUpdateSpots, [difference, registration.time_slot], err => {\n            if (err) {\n              return res.send(`\n                                <head>\n                                    <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                                    <title>Update Failed</title>\n                                </head>\n                                <h1>Error Updating Spots</h1>\n                                <p>There was an issue updating the available spots for the time slot.</p>\n                                <a href=\"/\">Go back to the home page</a>\n                            `);\n            }\n            res.send(`\n                            <head>\n                                <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                                <title>Registration Updated</title>\n                            </head>\n                            <h1>Registration Updated</h1>\n                            <p>Your registration has been successfully updated.</p>\n                            <a href=\"/\">Go back to the home page</a>\n                        `);\n          });\n        } else {\n          res.send(`\n                        <head>\n                            <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                            <title>Registration Updated</title>\n                        </head>\n                        <h1>Registration Updated</h1>\n                        <p>Your registration has been successfully updated.</p>\n                        <a href=\"/\">Go back to the home page</a>\n                    `);\n        }\n      });\n    }\n  });\n});\n\n//ADMIN page\nconst adminPassword = 'SLEEP4tG'; // Replace with your actual password\n\n// Middleware to protect the admin route\nfunction checkAdminAuth(req, res, next) {\n  const auth = req.headers['authorization'];\n  if (!auth) {\n    res.setHeader('WWW-Authenticate', 'Basic realm=\"Admin Area\"');\n    return res.status(401).send('Authentication required.');\n  }\n  const encoded = auth.split(' ')[1];\n  const decoded = Buffer.from(encoded, 'base64').toString('utf-8');\n  const [username, password] = decoded.split(':');\n  if (username === 'admin' && password === adminPassword) {\n    return next();\n  }\n  res.setHeader('WWW-Authenticate', 'Basic realm=\"Admin Area\"');\n  return res.status(401).send('Authentication failed.');\n}\napp.get('/admin', checkAdminAuth, (req, res) => {\n  const sql = 'SELECT * FROM registrations ORDER BY time_slot';\n  connection.query(sql, (err, results) => {\n    if (err) {\n      return res.send('Error retrieving registrations.');\n    }\n\n    // Create HTML table for the registrations\n    let html = `\n            <h1>Admin: View Registrations</h1>\n            <table border=\"1\">\n                <tr>\n                    <th>Registration Number</th>\n                    <th>Email</th>\n                    <th>Time Slot</th>\n                    <th>Names</th>\n                    <th>Ages</th>\n                    <th>Action</th>\n                </tr>\n        `;\n    results.forEach(registration => {\n      html += `\n                <tr>\n                    <td>${registration.registration_number}</td>\n                    <td>${registration.email}</td>\n                    <td>${registration.time_slot}</td>\n                    <td>${registration.names}</td>\n                    <td>${registration.ages}</td>\n                    <td>\n                        <form action=\"/admin/delete\" method=\"POST\">\n                            <input type=\"hidden\" name=\"registration_number\" value=\"${registration.registration_number}\" />\n                            <button type=\"submit\">Remove</button>\n                        </form>\n                    </td>\n                </tr>\n            `;\n    });\n    html += '</table>';\n    res.send(html);\n  });\n});\napp.post('/register', async (req, res) => {\n  const {\n    email,\n    registrationNumber,\n    timeSlot,\n    names,\n    viewUrl\n  } = req.body;\n  try {\n    await sendRegistrationEmail(email, registrationNumber, timeSlot, names, viewUrl);\n    res.status(200).send('Registration successful, email sent.');\n  } catch (error) {\n    res.status(500).send('Registration successful, but email failed.');\n  }\n});\napp.post('/admin/delete', checkAdminAuth, (req, res) => {\n  const registrationNumber = req.body.registration_number;\n\n  // Retrieve the registration details\n  const sqlSelect = 'SELECT * FROM registrations WHERE registration_number = ?';\n  connection.query(sqlSelect, [registrationNumber], (err, results) => {\n    if (err || results.length === 0) {\n      return res.send('Error finding the registration.');\n    }\n    const registration = results[0];\n    const numberOfPeople = registration.names.split(', ').length; // Split by comma to count names\n\n    // Delete the registration from the database\n    const sqlDelete = 'DELETE FROM registrations WHERE registration_number = ?';\n    connection.query(sqlDelete, [registrationNumber], err => {\n      if (err) {\n        return res.send('Error deleting the registration.');\n      }\n\n      // Add back the number of spots to the time slot\n      const sqlUpdateSpots = 'UPDATE time_slots SET spots_remaining = spots_remaining + ? WHERE time_slot = ?';\n      connection.query(sqlUpdateSpots, [numberOfPeople, registration.time_slot], err => {\n        if (err) {\n          return res.send('Error updating spots.');\n        }\n        res.redirect('/admin'); // Refresh the admin page after deletion\n      });\n    });\n  });\n});\n\n// Serve the landing and registration pages\napp.get('/', (req, res) => {\n  res.sendFile(__dirname + '/public/index.html');\n});\napp.get('/register.html', (req, res) => {\n  res.sendFile(__dirname + '/public/register.html');\n});\napp.get('/spots', (req, res) => {\n  const sql = 'SELECT time_slot, spots_remaining FROM time_slots';\n  connection.query(sql, (err, results) => {\n    if (err) {\n      return res.status(500).json({\n        error: 'Error fetching available spots'\n      });\n    }\n    res.json(results);\n  });\n});\n\n// Handle form submission\napp.post('/submit', (req, res) => {\n  const {\n    timeSlot,\n    email,\n    names,\n    ages\n  } = req.body;\n  const registrationNumber = generateRegistrationNumber();\n\n  // Step 1: Check the remaining spots from the database\n  const checkSpotsSql = 'SELECT spots_remaining FROM time_slots WHERE time_slot = ?';\n  connection.query(checkSpotsSql, [timeSlot], (err, results) => {\n    if (err || results.length === 0) {\n      console.error('Error checking spots:', err);\n      return res.send(`\n                <head>\n                    <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                    <title>Registration Failed</title>\n                </head>\n                <h1>Registration Failed</h1>\n                <p>Could not retrieve available spots. Please try again later.</p>\n                <a href=\"/register.html\">Go back</a>\n            `);\n    }\n    const spotsRemaining = results[0].spots_remaining;\n\n    // Step 2: Check if there are enough spots\n    if (spotsRemaining < names.length) {\n      return res.send(`\n                <head>\n                    <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                    <title>Registration Failed</title>\n                </head>\n                <h1>Registration Failed</h1>\n                <p>Sorry, there aren't enough spots left for the selected time slot (${timeSlot}).</p>\n                <a href=\"/register.html\">Go back and try another slot</a>\n            `);\n    }\n\n    // Step 3: Deduct the number of registered people from the available spots\n    const updateSpotsSql = 'UPDATE time_slots SET spots_remaining = spots_remaining - ? WHERE time_slot = ?';\n    connection.query(updateSpotsSql, [names.length, timeSlot], err => {\n      if (err) {\n        console.error('Error updating spots:', err);\n        return res.send(`\n                    <head>\n                        <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                        <title>Registration Failed</title>\n                    </head>\n                    <h1>Registration Failed</h1>\n                    <p>Could not update available spots. Please try again later.</p>\n                    <a href=\"/register.html\">Go back</a>\n                `);\n      }\n\n      // Step 4: Save registration to the MySQL database\n      const sql = `\n                INSERT INTO registrations (registration_number, email, time_slot, names, ages)\n                VALUES (?, ?, ?, ?, ?)\n            `;\n      const namesString = names.join(', ');\n      const agesString = ages.join(', ');\n      connection.query(sql, [registrationNumber, email, timeSlot, namesString, agesString], err => {\n        if (err) {\n          console.error('Database error:', err);\n          return res.send(`\n                        <head>\n                            <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                            <title>Registration Failed</title>\n                        </head>\n                        <h1>Registration Failed</h1>\n                        <p>There was an issue saving your registration. Please try again later.</p>\n                        <a href=\"/register.html\">Go back</a>\n                    `);\n        }\n\n        //Send email\n        const viewUrl = `https://your-domain.com/view-registration?number=${registrationNumber}`;\n        sendRegistrationEmail(email, registrationNumber, timeSlot, names, viewUrl);\n\n        // Return a confirmation\n        res.send(`\n                    <head>\n                        <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\n                        <title>Thank you!</title>\n                    </head>\n                    <h1>Thank you for registering!</h1>\n                    <p>You have registered ${names.length} person(s) for the ${timeSlot} time slot.</p>\n                    <p>Your registration number is <strong>${registrationNumber}</strong>. Please keep this number for future reference.</p>\n                    <a href=\"/\">Go back to the home page</a>\n                `);\n      });\n    });\n  });\n});\n\n// Start server\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () => {\n  console.log(`Server running on port ${PORT}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","bodyParser","mysql","crypto","nodemailer","QRCode","path","app","use","urlencoded","extended","static","json","connection","createConnection","host","port","user","password","database","connect","err","console","error","stack","log","query","results","solution","transporter","createTransport","secure","auth","pass","tls","rejectUnauthorized","sendRegistrationEmail","email","registrationNumber","timeSlot","names","viewUrl","qrCodeURL","generateQRCode","qrCodeData","qrCodeBuffer","toBuffer","emailContent","join","mailOptions","from","to","subject","html","attachments","filename","content","cid","sendMail","info","response","toDataURL","get","req","res","sendFile","__dirname","post","body","mockRegistrant","name","status","success","message","registrant","availableSlots","generateRegistrationNumber","now","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","slice","randomFourDigits","Math","floor","random","registration_number","sql","length","send","registration","namesArray","split","agesArray","ages","registrationDetails","time_slot","forEach","index","sqlFind","existingRegistrantCount","sqlDelete","sqlUpdateSpots","newRegistrantCount","difference","namesString","agesString","sqlUpdate","adminPassword","checkAdminAuth","next","headers","setHeader","encoded","decoded","Buffer","toString","username","sqlSelect","numberOfPeople","redirect","checkSpotsSql","spotsRemaining","spots_remaining","updateSpotsSql","PORT","process","env","listen"],"sourceRoot":"C:\\Users\\Andrew\\Documents\\Projects\\HH 24'\\hauntbrunswick.com\\","sources":["server.js"],"sourcesContent":["const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst mysql = require('mysql2');\r\nconst crypto = require('crypto');  // For generating registration numbers\r\nconst nodemailer = require('nodemailer');\r\nconst QRCode = require('qrcode');\r\nconst path = require('path');\r\nconst app = express();\r\n\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(express.static('public'));\r\napp.use(express.json());\r\n\r\n// MySQL connection setup\r\nconst connection = mysql.createConnection({\r\n    host: '100.87.150.78',  // 192.168.100.100\r\n    port: '3667',\r\n    user: 'valak',\r\n    password: 'SLEEP4tG',\r\n    database: 'MYSQL_DATABASE'\r\n});\r\n\r\nconnection.connect((err) => {\r\n    if (err) {\r\n        console.error('Error connecting to MySQL:', err.stack);\r\n        return;\r\n    }\r\n    console.log('Connected to MySQL');\r\n});\r\n\r\nconnection.query('SELECT 1 + 1 AS solution', (err, results) => {\r\n    if (err) {\r\n        console.error('Error querying MySQL:', err.stack);\r\n    } else {\r\n        console.log('Test query successful, solution:', results[0].solution);\r\n    }\r\n});\r\n\r\nconst transporter = nodemailer.createTransport({\r\n    host: 'smtp.office365.com',\r\n    port: 587,\r\n    secure: false, // Use TLS\r\n    auth: {\r\n        user: 'donotreply@hauntbrunswick.com', // Your Office 365 email\r\n        pass: 'vsjwbdbfhvqrvyqw' // Your Office 365 app password\r\n    },\r\n    tls: {\r\n        rejectUnauthorized: false // This might help if there's an issue with the certificate\r\n    }\r\n});\r\n\r\nasync function sendRegistrationEmail(email, registrationNumber, timeSlot, names, viewUrl) {\r\n    // Generate the QR code\r\n    const qrCodeURL = await generateQRCode(registrationNumber, email);\r\n    const qrCodeData = `${registrationNumber}:${email}`;\r\n    const qrCodeBuffer = await QRCode.toBuffer(qrCodeData);\r\n    console.log(qrCodeURL);\r\n\r\n    // Email content with the embedded QR code\r\n    const emailContent = `\r\n        <h1>Thank you for registering!</h1>\r\n        <p>You have registered for the following time slot on <strong>Sunday, October 27th</strong>:</p>\r\n        <p>Time Slot: ${timeSlot}</p>\r\n        <p>Names of attendees: ${names.join(', ')}</p>\r\n        <p>You can view your registration details at <a href=\"${viewUrl}\">this link</a>.</p>\r\n        <p>Use the QR code below when checking in:</p>\r\n        <img src=\"cid:qrCode\" alt=\"QR Code\" />\r\n    `;\r\n\r\n    // Use Nodemailer to send the email (you likely have this setup already)\r\n    const mailOptions = {\r\n        from: 'donotreply@hauntbrunswick.com',\r\n        to: email,\r\n        subject: 'Your Haunted House Registration Confirmation',\r\n        html: emailContent,\r\n        attachments: [{\r\n          filename: 'qrcode.png',\r\n          content: qrCodeBuffer,\r\n          cid: 'qrCode'  // Same CID as in the email content\r\n        }]\r\n    };\r\n\r\n    // Send the email\r\n    transporter.sendMail(mailOptions, (error, info) => {\r\n        if (error) {\r\n            console.error('Error sending email:', error);\r\n        } else {\r\n            console.log('Email sent: ' + info.response);\r\n        }\r\n    });\r\n}\r\n\r\nasync function generateQRCode(registrationNumber, email) {\r\n  try {\r\n    const qrCodeData = `${registrationNumber}:${email}`; // The data you want to encode in the QR code\r\n    const qrCodeURL = await QRCode.toDataURL(qrCodeData); // Generates a base64 image URL\r\n    return qrCodeURL;\r\n  } catch (err) {\r\n    console.error('Failed to generate QR Code', err);\r\n    throw err;\r\n  }\r\n}\r\n\r\napp.get('/checkin', (req, res) => {\r\n  res.sendFile(path.join(__dirname, 'public/checkin/index.html'));\r\n});\r\n\r\n// API route to handle QR code scan data\r\napp.post('/checkin', (req, res) => {\r\n  const { registrationNumber, email } = req.body;\r\n\r\n  // Lookup logic: You would fetch the registrant's details from your database here.\r\n  // For now, let's simulate this with a simple check.\r\n\r\n  // Simulated registrant data (replace this with actual database lookup)\r\n  const mockRegistrant = {\r\n    registrationNumber: '123456',\r\n    email: 'user@example.com',\r\n    name: 'John Doe',\r\n    timeSlot: '7:00 PM'\r\n  };\r\n\r\n  // Check if the scanned data matches the mock registrant data\r\n  if (registrationNumber === mockRegistrant.registrationNumber && email === mockRegistrant.email) {\r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'Registrant found!',\r\n      registrant: mockRegistrant\r\n    });\r\n  } else {\r\n    res.status(404).json({\r\n      success: false,\r\n      message: 'Registrant not found!'\r\n    });\r\n  }\r\n});\r\n\r\n// In-memory storage of available spots (this could also be in the database)\r\nlet availableSlots = {\r\n    '6:00 PM': 20,\r\n    '6:15 PM': 20,\r\n    '6:30 PM': 20,\r\n    '6:45 PM': 20,\r\n    '7:00 PM': 20,\r\n    '7:15 PM': 20,\r\n    '7:30 PM': 20,\r\n    '7:45 PM': 20,\r\n    '8:00 PM': 20,\r\n    '8:15 PM': 20,\r\n    '8:30 PM': 20,\r\n    '8:45 PM': 20\r\n};\r\n\r\nfunction generateRegistrationNumber() {\r\n    const now = new Date();\r\n    const day = String(now.getDate()).padStart(2, '0');      // DD\r\n    const month = String(now.getMonth() + 1).padStart(2, '0'); // MM\r\n    const year = String(now.getFullYear()).slice(-2);        // YY\r\n    const randomFourDigits = Math.floor(1000 + Math.random() * 9000);\r\n    return `LC-${day}${month}${year}-${randomFourDigits}`;\r\n}\r\n\r\n//View registration\r\napp.post('/view-registration', (req, res) => {\r\n    const { registration_number, email } = req.body;\r\n\r\n    // Query to find the registration based on registration number and email\r\n    const sql = 'SELECT * FROM registrations WHERE registration_number = ? AND email = ?';\r\n    connection.query(sql, [registration_number, email], (err, results) => {\r\n        if (err || results.length === 0) {\r\n            return res.send(`\r\n                <head>\r\n                    <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                    <title>No Registration Found</title>\r\n                </head>\r\n                <h1>No Registration Found</h1>\r\n                <p>We couldn't find a registration with that number and email.</p>\r\n                <a href=\"/view.html\">Try again</a>\r\n            `);\r\n        }\r\n\r\n        const registration = results[0];\r\n        const namesArray = registration.names.split(', ');\r\n        const agesArray = registration.ages.split(', ');\r\n\r\n        let registrationDetails = `\r\n            <head>\r\n                <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                <title>Modify Registration</title>\r\n            </head>\r\n            <h2>Registration Details</h2>\r\n            <p>Registration Number: ${registration.registration_number}</p>\r\n            <p>Email: ${registration.email}</p>\r\n            <p>Time Slot: ${registration.time_slot}</p>\r\n            <form id=\"modify-form\" action=\"/modify-registration\" method=\"POST\">\r\n                <input type=\"hidden\" name=\"registration_number\" value=\"${registration.registration_number}\">\r\n                <input type=\"hidden\" name=\"email\" value=\"${registration.email}\">\r\n        `;\r\n\r\n        // Generate attendee fields for modification\r\n        namesArray.forEach((name, index) => {\r\n            registrationDetails += `\r\n                <div class=\"attendee\" id=\"attendee-${index + 1}\">\r\n                    <label for=\"name${index + 1}\">Name:</label>\r\n                    <input type=\"text\" id=\"name${index + 1}\" name=\"names[]\" value=\"${name}\" required>\r\n                    <label for=\"age${index + 1}\">Age:</label>\r\n                    <select id=\"age${index + 1}\" name=\"ages[]\" required>\r\n                        <option value=\"16-20\" ${agesArray[index] === '16-20' ? 'selected' : ''}>16-20</option>\r\n                        <option value=\"21-30\" ${agesArray[index] === '21-30' ? 'selected' : ''}>21-30</option>\r\n                        <option value=\"31-40\" ${agesArray[index] === '31-40' ? 'selected' : ''}>31-40</option>\r\n                        <option value=\"41-50\" ${agesArray[index] === '41-50' ? 'selected' : ''}>41-50</option>\r\n                        <option value=\"51+\" ${agesArray[index] === '51+' ? 'selected' : ''}>51+</option>\r\n                    </select>\r\n                    <button type=\"button\" onclick=\"removeAttendee(${index + 1})\">Remove</button>\r\n                </div>\r\n            `;\r\n        });\r\n\r\n        // Add \"Remove All\" button and submit button\r\n        registrationDetails += `\r\n                <button type=\"button\" onclick=\"confirmRemoveAll()\">Remove All</button>\r\n                <button class=\"button\" type=\"submit\">Submit Changes</button>\r\n            </form>\r\n\r\n            <script>\r\n                // Function to remove individual attendees\r\n                function removeAttendee(index) {\r\n                    const attendeeElement = document.getElementById('attendee-' + index);\r\n                    attendeeElement.remove();\r\n                }\r\n\r\n                // Function to confirm removing all attendees\r\n                function confirmRemoveAll() {\r\n                    const attendeeElements = document.querySelectorAll('.attendee');\r\n\r\n                    if (attendeeElements.length === 0) {\r\n                        alert(\"No registrants to remove.\");\r\n                        return;\r\n                    }\r\n\r\n                    const confirmed = confirm(\"Are you sure you want to remove all registrants?\");\r\n                    if (confirmed) {\r\n                        attendeeElements.forEach(attendee => attendee.remove());\r\n                    }\r\n                }\r\n            </script>\r\n        `;\r\n\r\n        // Return the registration details to the user\r\n        res.send(registrationDetails);\r\n    });\r\n});\r\n\r\napp.post('/modify-registration', (req, res) => {\r\n    const { registration_number, email, names, ages } = req.body;\r\n\r\n    // Query to find the existing registration before making changes\r\n    const sqlFind = 'SELECT * FROM registrations WHERE registration_number = ? AND email = ?';\r\n    connection.query(sqlFind, [registration_number, email], (err, results) => {\r\n        if (err || results.length === 0) {\r\n            return res.send(`\r\n                <head>\r\n                    <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                    <title>No Registration Found</title>\r\n                </head>\r\n                <h1>No Registration Found</h1>\r\n                <p>We couldn't find a registration with that number and email.</p>\r\n                <a href=\"/view.html\">Try again</a>\r\n            `);\r\n        }\r\n\r\n        const registration = results[0];\r\n        const existingRegistrantCount = registration.names ? registration.names.split(', ').length : 0;\r\n\r\n        // If 'names' array is undefined or empty, delete the registration and add spots back to the time slot\r\n        if (!names || names.length === 0) {\r\n            const sqlDelete = 'DELETE FROM registrations WHERE registration_number = ? AND email = ?';\r\n            connection.query(sqlDelete, [registration_number, email], (err) => {\r\n                if (err) {\r\n                    return res.send(`\r\n                        <head>\r\n                            <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                            <title>Removal Failed</title>\r\n                        </head>\r\n                        <h1>Error</h1>\r\n                        <p>There was an issue removing your registration. Please try again later.</p>\r\n                        <a href=\"/view.html\">Go back</a>\r\n                    `);\r\n                }\r\n\r\n                // Add back all spots when registration is removed\r\n                const sqlUpdateSpots = 'UPDATE time_slots SET spots_remaining = spots_remaining + ? WHERE time_slot = ?';\r\n                connection.query(sqlUpdateSpots, [existingRegistrantCount, registration.time_slot], (err) => {\r\n                    if (err) {\r\n                        return res.send(`\r\n                            <head>\r\n                                <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                                <title>Error Updating</title>\r\n                            </head>\r\n                            <h1>Error Updating Spots</h1>\r\n                            <p>There was an issue updating the available spots for the time slot.</p>\r\n                            <a href=\"/\">Go back to the home page</a>\r\n                        `);\r\n                    }\r\n\r\n                    res.send(`\r\n                        <head>\r\n                            <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                            <title>Registration Removed</title>\r\n                        </head>\r\n                        <h1>Registration Removed</h1>\r\n                        <p>Your registration has been successfully removed.</p>\r\n                        <a href=\"/\">Go back to the home page</a>\r\n                    `);\r\n                });\r\n            });\r\n        } else {\r\n            // Calculate the difference in registrant count (if any registrants were added or removed)\r\n            const newRegistrantCount = names.length;\r\n            const difference = existingRegistrantCount - newRegistrantCount;\r\n\r\n            // Safeguard for undefined names or ages when joining\r\n            const namesString = names && names.length ? names.join(', ') : '';\r\n            const agesString = ages && ages.length ? ages.join(', ') : '';\r\n\r\n            const sqlUpdate = `\r\n                UPDATE registrations\r\n                SET names = ?, ages = ?\r\n                WHERE registration_number = ? AND email = ?\r\n            `;\r\n\r\n            connection.query(sqlUpdate, [namesString, agesString, registration_number, email], (err) => {\r\n                if (err) {\r\n                    return res.send(`\r\n                        <head>\r\n                            <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                            <title>Update Failed</title>\r\n                        </head>\r\n                        <h1>Update Failed</h1>\r\n                        <p>There was an issue updating your registration. Please try again later.</p>\r\n                        <a href=\"/view.html\">Go back</a>\r\n                    `);\r\n                }\r\n\r\n                // Update spots remaining based on the difference in registrants\r\n                if (difference !== 0) {\r\n                    const sqlUpdateSpots = 'UPDATE time_slots SET spots_remaining = spots_remaining + ? WHERE time_slot = ?';\r\n                    connection.query(sqlUpdateSpots, [difference, registration.time_slot], (err) => {\r\n                        if (err) {\r\n                            return res.send(`\r\n                                <head>\r\n                                    <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                                    <title>Update Failed</title>\r\n                                </head>\r\n                                <h1>Error Updating Spots</h1>\r\n                                <p>There was an issue updating the available spots for the time slot.</p>\r\n                                <a href=\"/\">Go back to the home page</a>\r\n                            `);\r\n                        }\r\n\r\n                        res.send(`\r\n                            <head>\r\n                                <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                                <title>Registration Updated</title>\r\n                            </head>\r\n                            <h1>Registration Updated</h1>\r\n                            <p>Your registration has been successfully updated.</p>\r\n                            <a href=\"/\">Go back to the home page</a>\r\n                        `);\r\n                    });\r\n                } else {\r\n                    res.send(`\r\n                        <head>\r\n                            <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                            <title>Registration Updated</title>\r\n                        </head>\r\n                        <h1>Registration Updated</h1>\r\n                        <p>Your registration has been successfully updated.</p>\r\n                        <a href=\"/\">Go back to the home page</a>\r\n                    `);\r\n                }\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n//ADMIN page\r\nconst adminPassword = 'SLEEP4tG';  // Replace with your actual password\r\n\r\n// Middleware to protect the admin route\r\nfunction checkAdminAuth(req, res, next) {\r\n    const auth = req.headers['authorization'];\r\n\r\n    if (!auth) {\r\n        res.setHeader('WWW-Authenticate', 'Basic realm=\"Admin Area\"');\r\n        return res.status(401).send('Authentication required.');\r\n    }\r\n\r\n    const encoded = auth.split(' ')[1];\r\n    const decoded = Buffer.from(encoded, 'base64').toString('utf-8');\r\n    const [username, password] = decoded.split(':');\r\n\r\n    if (username === 'admin' && password === adminPassword) {\r\n        return next();\r\n    }\r\n\r\n    res.setHeader('WWW-Authenticate', 'Basic realm=\"Admin Area\"');\r\n    return res.status(401).send('Authentication failed.');\r\n}\r\n\r\napp.get('/admin', checkAdminAuth, (req, res) => {\r\n    const sql = 'SELECT * FROM registrations ORDER BY time_slot';\r\n\r\n    connection.query(sql, (err, results) => {\r\n        if (err) {\r\n            return res.send('Error retrieving registrations.');\r\n        }\r\n\r\n        // Create HTML table for the registrations\r\n        let html = `\r\n            <h1>Admin: View Registrations</h1>\r\n            <table border=\"1\">\r\n                <tr>\r\n                    <th>Registration Number</th>\r\n                    <th>Email</th>\r\n                    <th>Time Slot</th>\r\n                    <th>Names</th>\r\n                    <th>Ages</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n        `;\r\n\r\n        results.forEach(registration => {\r\n            html += `\r\n                <tr>\r\n                    <td>${registration.registration_number}</td>\r\n                    <td>${registration.email}</td>\r\n                    <td>${registration.time_slot}</td>\r\n                    <td>${registration.names}</td>\r\n                    <td>${registration.ages}</td>\r\n                    <td>\r\n                        <form action=\"/admin/delete\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"registration_number\" value=\"${registration.registration_number}\" />\r\n                            <button type=\"submit\">Remove</button>\r\n                        </form>\r\n                    </td>\r\n                </tr>\r\n            `;\r\n        });\r\n\r\n        html += '</table>';\r\n        res.send(html);\r\n    });\r\n});\r\n\r\napp.post('/register', async (req, res) => {\r\n    const { email, registrationNumber, timeSlot, names, viewUrl } = req.body;\r\n\r\n    try {\r\n        await sendRegistrationEmail(email, registrationNumber, timeSlot, names, viewUrl);\r\n        res.status(200).send('Registration successful, email sent.');\r\n    } catch (error) {\r\n        res.status(500).send('Registration successful, but email failed.');\r\n    }\r\n});\r\n\r\napp.post('/admin/delete', checkAdminAuth, (req, res) => {\r\n    const registrationNumber = req.body.registration_number;\r\n\r\n    // Retrieve the registration details\r\n    const sqlSelect = 'SELECT * FROM registrations WHERE registration_number = ?';\r\n\r\n    connection.query(sqlSelect, [registrationNumber], (err, results) => {\r\n        if (err || results.length === 0) {\r\n            return res.send('Error finding the registration.');\r\n        }\r\n\r\n        const registration = results[0];\r\n        const numberOfPeople = registration.names.split(', ').length;  // Split by comma to count names\r\n\r\n        // Delete the registration from the database\r\n        const sqlDelete = 'DELETE FROM registrations WHERE registration_number = ?';\r\n        connection.query(sqlDelete, [registrationNumber], (err) => {\r\n            if (err) {\r\n                return res.send('Error deleting the registration.');\r\n            }\r\n\r\n            // Add back the number of spots to the time slot\r\n            const sqlUpdateSpots = 'UPDATE time_slots SET spots_remaining = spots_remaining + ? WHERE time_slot = ?';\r\n            connection.query(sqlUpdateSpots, [numberOfPeople, registration.time_slot], (err) => {\r\n                if (err) {\r\n                    return res.send('Error updating spots.');\r\n                }\r\n\r\n                res.redirect('/admin');  // Refresh the admin page after deletion\r\n            });\r\n        });\r\n    });\r\n});\r\n\r\n// Serve the landing and registration pages\r\napp.get('/', (req, res) => {\r\n    res.sendFile(__dirname + '/public/index.html');\r\n});\r\n\r\napp.get('/register.html', (req, res) => {\r\n    res.sendFile(__dirname + '/public/register.html');\r\n});\r\n\r\napp.get('/spots', (req, res) => {\r\n    const sql = 'SELECT time_slot, spots_remaining FROM time_slots';\r\n    connection.query(sql, (err, results) => {\r\n        if (err) {\r\n            return res.status(500).json({ error: 'Error fetching available spots' });\r\n        }\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Handle form submission\r\napp.post('/submit', (req, res) => {\r\n    const { timeSlot, email, names, ages } = req.body;\r\n    const registrationNumber = generateRegistrationNumber();\r\n\r\n    // Step 1: Check the remaining spots from the database\r\n    const checkSpotsSql = 'SELECT spots_remaining FROM time_slots WHERE time_slot = ?';\r\n    connection.query(checkSpotsSql, [timeSlot], (err, results) => {\r\n        if (err || results.length === 0) {\r\n            console.error('Error checking spots:', err);\r\n            return res.send(`\r\n                <head>\r\n                    <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                    <title>Registration Failed</title>\r\n                </head>\r\n                <h1>Registration Failed</h1>\r\n                <p>Could not retrieve available spots. Please try again later.</p>\r\n                <a href=\"/register.html\">Go back</a>\r\n            `);\r\n        }\r\n\r\n        const spotsRemaining = results[0].spots_remaining;\r\n\r\n        // Step 2: Check if there are enough spots\r\n        if (spotsRemaining < names.length) {\r\n            return res.send(`\r\n                <head>\r\n                    <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                    <title>Registration Failed</title>\r\n                </head>\r\n                <h1>Registration Failed</h1>\r\n                <p>Sorry, there aren't enough spots left for the selected time slot (${timeSlot}).</p>\r\n                <a href=\"/register.html\">Go back and try another slot</a>\r\n            `);\r\n        }\r\n\r\n        // Step 3: Deduct the number of registered people from the available spots\r\n        const updateSpotsSql = 'UPDATE time_slots SET spots_remaining = spots_remaining - ? WHERE time_slot = ?';\r\n        connection.query(updateSpotsSql, [names.length, timeSlot], (err) => {\r\n            if (err) {\r\n                console.error('Error updating spots:', err);\r\n                return res.send(`\r\n                    <head>\r\n                        <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                        <title>Registration Failed</title>\r\n                    </head>\r\n                    <h1>Registration Failed</h1>\r\n                    <p>Could not update available spots. Please try again later.</p>\r\n                    <a href=\"/register.html\">Go back</a>\r\n                `);\r\n            }\r\n\r\n            // Step 4: Save registration to the MySQL database\r\n            const sql = `\r\n                INSERT INTO registrations (registration_number, email, time_slot, names, ages)\r\n                VALUES (?, ?, ?, ?, ?)\r\n            `;\r\n            const namesString = names.join(', ');\r\n            const agesString = ages.join(', ');\r\n\r\n            connection.query(sql, [registrationNumber, email, timeSlot, namesString, agesString], (err) => {\r\n                if (err) {\r\n                    console.error('Database error:', err);\r\n                    return res.send(`\r\n                        <head>\r\n                            <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                            <title>Registration Failed</title>\r\n                        </head>\r\n                        <h1>Registration Failed</h1>\r\n                        <p>There was an issue saving your registration. Please try again later.</p>\r\n                        <a href=\"/register.html\">Go back</a>\r\n                    `);\r\n                }\r\n\r\n                //Send email\r\n                const viewUrl = `https://your-domain.com/view-registration?number=${registrationNumber}`;\r\n                sendRegistrationEmail(email, registrationNumber, timeSlot, names, viewUrl);\r\n\r\n                // Return a confirmation\r\n                res.send(`\r\n                    <head>\r\n                        <link rel=\"stylesheet\" href=\"/spooky-theme.css\">\r\n                        <title>Thank you!</title>\r\n                    </head>\r\n                    <h1>Thank you for registering!</h1>\r\n                    <p>You have registered ${names.length} person(s) for the ${timeSlot} time slot.</p>\r\n                    <p>Your registration number is <strong>${registrationNumber}</strong>. Please keep this number for future reference.</p>\r\n                    <a href=\"/\">Go back to the home page</a>\r\n                `);\r\n            });\r\n        });\r\n    });\r\n});\r\n\r\n// Start server\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => {\r\n    console.log(`Server running on port ${PORT}`);\r\n});\r\n"],"mappings":"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"}},"mtime":1727019545252},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Andrew\\\\Documents\\\\Projects\\\\HH 24'\\\\hauntbrunswick.com\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"C:\\\\Users\\\\Andrew\\\\Documents\\\\Projects\\\\HH 24'\\\\hauntbrunswick.com\",\"filename\":\"C:\\\\Users\\\\Andrew\\\\Documents\\\\Projects\\\\HH 24'\\\\hauntbrunswick.com\\\\TESTEMAIL.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"C:\\\\Users\\\\Andrew\\\\Documents\\\\Projects\\\\HH 24'\\\\hauntbrunswick.com\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.1:production":{"value":{"code":"\"use strict\";\n\nconst nodemailer = require('nodemailer');\nconst transporter = nodemailer.createTransport({\n  host: 'smtp.office365.com',\n  port: 587,\n  secure: false,\n  // Use TLS\n  auth: {\n    user: 'donotreply@hauntbrunswick.com',\n    pass: 'vsjwbdbfhvqrvyqw'\n  },\n  tls: {\n    rejectUnauthorized: false\n  }\n});\nconst mailOptions = {\n  from: 'donotreply@hauntbrunswick.com',\n  to: '696969ik@gmail.com',\n  subject: 'Test Email',\n  text: 'This is a test email to verify the app password.'\n};\ntransporter.sendMail(mailOptions, (error, info) => {\n  if (error) {\n    console.error('Error sending email:', error);\n  } else {\n    console.log('Email sent:', info.response);\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJub2RlbWFpbGVyIiwicmVxdWlyZSIsInRyYW5zcG9ydGVyIiwiY3JlYXRlVHJhbnNwb3J0IiwiaG9zdCIsInBvcnQiLCJzZWN1cmUiLCJhdXRoIiwidXNlciIsInBhc3MiLCJ0bHMiLCJyZWplY3RVbmF1dGhvcml6ZWQiLCJtYWlsT3B0aW9ucyIsImZyb20iLCJ0byIsInN1YmplY3QiLCJ0ZXh0Iiwic2VuZE1haWwiLCJlcnJvciIsImluZm8iLCJjb25zb2xlIiwibG9nIiwicmVzcG9uc2UiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQW5kcmV3XFxEb2N1bWVudHNcXFByb2plY3RzXFxISCAyNCdcXGhhdW50YnJ1bnN3aWNrLmNvbVxcIiwic291cmNlcyI6WyJURVNURU1BSUwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgbm9kZW1haWxlciA9IHJlcXVpcmUoJ25vZGVtYWlsZXInKTtcclxuXHJcbmNvbnN0IHRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1xyXG4gIGhvc3Q6ICdzbXRwLm9mZmljZTM2NS5jb20nLFxyXG4gIHBvcnQ6IDU4NyxcclxuICBzZWN1cmU6IGZhbHNlLCAvLyBVc2UgVExTXHJcbiAgYXV0aDoge1xyXG4gICAgdXNlcjogJ2Rvbm90cmVwbHlAaGF1bnRicnVuc3dpY2suY29tJyxcclxuICAgIHBhc3M6ICd2c2p3YmRiZmh2cXJ2eXF3J1xyXG4gIH0sXHJcbiAgdGxzOiB7XHJcbiAgICByZWplY3RVbmF1dGhvcml6ZWQ6IGZhbHNlXHJcbiAgfVxyXG59KTtcclxuXHJcbmNvbnN0IG1haWxPcHRpb25zID0ge1xyXG4gIGZyb206ICdkb25vdHJlcGx5QGhhdW50YnJ1bnN3aWNrLmNvbScsXHJcbiAgdG86ICc2OTY5Njlpa0BnbWFpbC5jb20nLFxyXG4gIHN1YmplY3Q6ICdUZXN0IEVtYWlsJyxcclxuICB0ZXh0OiAnVGhpcyBpcyBhIHRlc3QgZW1haWwgdG8gdmVyaWZ5IHRoZSBhcHAgcGFzc3dvcmQuJ1xyXG59O1xyXG5cclxudHJhbnNwb3J0ZXIuc2VuZE1haWwobWFpbE9wdGlvbnMsIChlcnJvciwgaW5mbykgPT4ge1xyXG4gIGlmIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3Igc2VuZGluZyBlbWFpbDonLCBlcnJvcik7XHJcbiAgfSBlbHNlIHtcclxuICAgIGNvbnNvbGUubG9nKCdFbWFpbCBzZW50OicsIGluZm8ucmVzcG9uc2UpO1xyXG4gIH1cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxZQUFZLENBQUM7QUFFeEMsTUFBTUMsV0FBVyxHQUFHRixVQUFVLENBQUNHLGVBQWUsQ0FBQztFQUM3Q0MsSUFBSSxFQUFFLG9CQUFvQjtFQUMxQkMsSUFBSSxFQUFFLEdBQUc7RUFDVEMsTUFBTSxFQUFFLEtBQUs7RUFBRTtFQUNmQyxJQUFJLEVBQUU7SUFDSkMsSUFBSSxFQUFFLCtCQUErQjtJQUNyQ0MsSUFBSSxFQUFFO0VBQ1IsQ0FBQztFQUNEQyxHQUFHLEVBQUU7SUFDSEMsa0JBQWtCLEVBQUU7RUFDdEI7QUFDRixDQUFDLENBQUM7QUFFRixNQUFNQyxXQUFXLEdBQUc7RUFDbEJDLElBQUksRUFBRSwrQkFBK0I7RUFDckNDLEVBQUUsRUFBRSxvQkFBb0I7RUFDeEJDLE9BQU8sRUFBRSxZQUFZO0VBQ3JCQyxJQUFJLEVBQUU7QUFDUixDQUFDO0FBRURkLFdBQVcsQ0FBQ2UsUUFBUSxDQUFDTCxXQUFXLEVBQUUsQ0FBQ00sS0FBSyxFQUFFQyxJQUFJLEtBQUs7RUFDakQsSUFBSUQsS0FBSyxFQUFFO0lBQ1RFLE9BQU8sQ0FBQ0YsS0FBSyxDQUFDLHNCQUFzQixFQUFFQSxLQUFLLENBQUM7RUFDOUMsQ0FBQyxNQUFNO0lBQ0xFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGFBQWEsRUFBRUYsSUFBSSxDQUFDRyxRQUFRLENBQUM7RUFDM0M7QUFDRixDQUFDLENBQUMifQ==","map":{"version":3,"names":["nodemailer","require","transporter","createTransport","host","port","secure","auth","user","pass","tls","rejectUnauthorized","mailOptions","from","to","subject","text","sendMail","error","info","console","log","response"],"sourceRoot":"C:\\Users\\Andrew\\Documents\\Projects\\HH 24'\\hauntbrunswick.com\\","sources":["TESTEMAIL.js"],"sourcesContent":["const nodemailer = require('nodemailer');\r\n\r\nconst transporter = nodemailer.createTransport({\r\n  host: 'smtp.office365.com',\r\n  port: 587,\r\n  secure: false, // Use TLS\r\n  auth: {\r\n    user: 'donotreply@hauntbrunswick.com',\r\n    pass: 'vsjwbdbfhvqrvyqw'\r\n  },\r\n  tls: {\r\n    rejectUnauthorized: false\r\n  }\r\n});\r\n\r\nconst mailOptions = {\r\n  from: 'donotreply@hauntbrunswick.com',\r\n  to: '696969ik@gmail.com',\r\n  subject: 'Test Email',\r\n  text: 'This is a test email to verify the app password.'\r\n};\r\n\r\ntransporter.sendMail(mailOptions, (error, info) => {\r\n  if (error) {\r\n    console.error('Error sending email:', error);\r\n  } else {\r\n    console.log('Email sent:', info.response);\r\n  }\r\n});\r\n"],"mappings":";;AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AAExC,MAAMC,WAAW,GAAGF,UAAU,CAACG,eAAe,CAAC;EAC7CC,IAAI,EAAE,oBAAoB;EAC1BC,IAAI,EAAE,GAAG;EACTC,MAAM,EAAE,KAAK;EAAE;EACfC,IAAI,EAAE;IACJC,IAAI,EAAE,+BAA+B;IACrCC,IAAI,EAAE;EACR,CAAC;EACDC,GAAG,EAAE;IACHC,kBAAkB,EAAE;EACtB;AACF,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAG;EAClBC,IAAI,EAAE,+BAA+B;EACrCC,EAAE,EAAE,oBAAoB;EACxBC,OAAO,EAAE,YAAY;EACrBC,IAAI,EAAE;AACR,CAAC;AAEDd,WAAW,CAACe,QAAQ,CAACL,WAAW,EAAE,CAACM,KAAK,EAAEC,IAAI,KAAK;EACjD,IAAID,KAAK,EAAE;IACTE,OAAO,CAACF,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C,CAAC,MAAM;IACLE,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,IAAI,CAACG,QAAQ,CAAC;EAC3C;AACF,CAAC,CAAC"}},"mtime":1726936652383},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Andrew\\\\Documents\\\\Projects\\\\HH 24'\\\\scanner\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"C:\\\\Users\\\\Andrew\\\\Documents\\\\Projects\\\\HH 24'\\\\scanner\",\"filename\":\"C:\\\\Users\\\\Andrew\\\\Documents\\\\Projects\\\\HH 24'\\\\scanner\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"C:\\\\Users\\\\Andrew\\\\Documents\\\\Projects\\\\HH 24'\\\\scanner\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.1:production":{"value":{"code":"\"use strict\";\n\nconst express = require('express');\nconst mysql = require('mysql2');\nconst bodyParser = require('body-parser');\nconst path = require('path');\nconst app = express();\n\n// MySQL connection setup\nconst connection = mysql.createConnection({\n  host: '100.87.150.78',\n  port: '3667',\n  user: 'valak',\n  password: 'SLEEP4tG',\n  database: 'MYSQL_DATABASE'\n});\nconnection.connect(err => {\n  if (err) {\n    console.error('Error connecting to MySQL:', err.stack);\n    return;\n  }\n  console.log('Connected to MySQL');\n});\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(express.static('public'));\napp.use(express.json());\n\n// Serve the QR code scanner page\napp.get('/', (req, res) => {\n  res.sendFile(path.join(__dirname, 'public/index.html'));\n});\n\n// API route to handle QR code scan data\napp.post('/checkin', (req, res) => {\n  const {\n    registrationNumber,\n    email\n  } = req.body;\n\n  // Query to verify registration from MySQL\n  const sql = 'SELECT * FROM registrations WHERE registration_number = ? AND email = ?';\n  connection.query(sql, [registrationNumber, email], (err, results) => {\n    if (err || results.length === 0) {\n      return res.status(404).json({\n        success: false,\n        message: 'Registrant not found!'\n      });\n    }\n\n    // Respond with registrant details if found\n    const registrant = results[0];\n    res.status(200).json({\n      success: true,\n      registrant: {\n        name: registrant.names,\n        timeSlot: registrant.time_slot\n      }\n    });\n  });\n});\n\n// Start server\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () => {\n  console.log(`QR Code Scanner server running on port ${PORT}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIm15c3FsIiwiYm9keVBhcnNlciIsInBhdGgiLCJhcHAiLCJjb25uZWN0aW9uIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJwb3J0IiwidXNlciIsInBhc3N3b3JkIiwiZGF0YWJhc2UiLCJjb25uZWN0IiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwic3RhY2siLCJsb2ciLCJ1c2UiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJzdGF0aWMiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZEZpbGUiLCJqb2luIiwiX19kaXJuYW1lIiwicG9zdCIsInJlZ2lzdHJhdGlvbk51bWJlciIsImVtYWlsIiwiYm9keSIsInNxbCIsInF1ZXJ5IiwicmVzdWx0cyIsImxlbmd0aCIsInN0YXR1cyIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwicmVnaXN0cmFudCIsIm5hbWUiLCJuYW1lcyIsInRpbWVTbG90IiwidGltZV9zbG90IiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJsaXN0ZW4iXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQW5kcmV3XFxEb2N1bWVudHNcXFByb2plY3RzXFxISCAyNCdcXHNjYW5uZXJcXCIsInNvdXJjZXMiOlsic2VydmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IG15c3FsID0gcmVxdWlyZSgnbXlzcWwyJyk7XHJcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xyXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG4vLyBNeVNRTCBjb25uZWN0aW9uIHNldHVwXHJcbmNvbnN0IGNvbm5lY3Rpb24gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcclxuICAgIGhvc3Q6ICcxMDAuODcuMTUwLjc4JyxcclxuICAgIHBvcnQ6ICczNjY3JyxcclxuICAgIHVzZXI6ICd2YWxhaycsXHJcbiAgICBwYXNzd29yZDogJ1NMRUVQNHRHJyxcclxuICAgIGRhdGFiYXNlOiAnTVlTUUxfREFUQUJBU0UnXHJcbn0pO1xyXG5cclxuY29ubmVjdGlvbi5jb25uZWN0KChlcnIpID0+IHtcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjb25uZWN0aW5nIHRvIE15U1FMOicsIGVyci5zdGFjayk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCB0byBNeVNRTCcpO1xyXG59KTtcclxuXHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKCdwdWJsaWMnKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5cclxuLy8gU2VydmUgdGhlIFFSIGNvZGUgc2Nhbm5lciBwYWdlXHJcbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5zZW5kRmlsZShwYXRoLmpvaW4oX19kaXJuYW1lLCAncHVibGljL2luZGV4Lmh0bWwnKSk7XHJcbn0pO1xyXG5cclxuLy8gQVBJIHJvdXRlIHRvIGhhbmRsZSBRUiBjb2RlIHNjYW4gZGF0YVxyXG5hcHAucG9zdCgnL2NoZWNraW4nLCAocmVxLCByZXMpID0+IHtcclxuICAgIGNvbnN0IHsgcmVnaXN0cmF0aW9uTnVtYmVyLCBlbWFpbCB9ID0gcmVxLmJvZHk7XHJcblxyXG4gICAgLy8gUXVlcnkgdG8gdmVyaWZ5IHJlZ2lzdHJhdGlvbiBmcm9tIE15U1FMXHJcbiAgICBjb25zdCBzcWwgPSAnU0VMRUNUICogRlJPTSByZWdpc3RyYXRpb25zIFdIRVJFIHJlZ2lzdHJhdGlvbl9udW1iZXIgPSA/IEFORCBlbWFpbCA9ID8nO1xyXG4gICAgY29ubmVjdGlvbi5xdWVyeShzcWwsIFtyZWdpc3RyYXRpb25OdW1iZXIsIGVtYWlsXSwgKGVyciwgcmVzdWx0cykgPT4ge1xyXG4gICAgICAgIGlmIChlcnIgfHwgcmVzdWx0cy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHtcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ1JlZ2lzdHJhbnQgbm90IGZvdW5kISdcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBSZXNwb25kIHdpdGggcmVnaXN0cmFudCBkZXRhaWxzIGlmIGZvdW5kXHJcbiAgICAgICAgY29uc3QgcmVnaXN0cmFudCA9IHJlc3VsdHNbMF07XHJcbiAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICAgICAgICByZWdpc3RyYW50OiB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiByZWdpc3RyYW50Lm5hbWVzLFxyXG4gICAgICAgICAgICAgICAgdGltZVNsb3Q6IHJlZ2lzdHJhbnQudGltZV9zbG90XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59KTtcclxuXHJcbi8vIFN0YXJ0IHNlcnZlclxyXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xyXG5hcHAubGlzdGVuKFBPUlQsICgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGBRUiBDb2RlIFNjYW5uZXIgc2VydmVyIHJ1bm5pbmcgb24gcG9ydCAke1BPUlR9YCk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1DLEtBQUssR0FBR0QsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUMvQixNQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxhQUFhLENBQUM7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","map":{"version":3,"names":["express","require","mysql","bodyParser","path","app","connection","createConnection","host","port","user","password","database","connect","err","console","error","stack","log","use","urlencoded","extended","static","json","get","req","res","sendFile","join","__dirname","post","registrationNumber","email","body","sql","query","results","length","status","success","message","registrant","name","names","timeSlot","time_slot","PORT","process","env","listen"],"sourceRoot":"C:\\Users\\Andrew\\Documents\\Projects\\HH 24'\\scanner\\","sources":["server.js"],"sourcesContent":["const express = require('express');\r\nconst mysql = require('mysql2');\r\nconst bodyParser = require('body-parser');\r\nconst path = require('path');\r\nconst app = express();\r\n\r\n// MySQL connection setup\r\nconst connection = mysql.createConnection({\r\n    host: '100.87.150.78',\r\n    port: '3667',\r\n    user: 'valak',\r\n    password: 'SLEEP4tG',\r\n    database: 'MYSQL_DATABASE'\r\n});\r\n\r\nconnection.connect((err) => {\r\n    if (err) {\r\n        console.error('Error connecting to MySQL:', err.stack);\r\n        return;\r\n    }\r\n    console.log('Connected to MySQL');\r\n});\r\n\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(express.static('public'));\r\napp.use(express.json());\r\n\r\n// Serve the QR code scanner page\r\napp.get('/', (req, res) => {\r\n    res.sendFile(path.join(__dirname, 'public/index.html'));\r\n});\r\n\r\n// API route to handle QR code scan data\r\napp.post('/checkin', (req, res) => {\r\n    const { registrationNumber, email } = req.body;\r\n\r\n    // Query to verify registration from MySQL\r\n    const sql = 'SELECT * FROM registrations WHERE registration_number = ? AND email = ?';\r\n    connection.query(sql, [registrationNumber, email], (err, results) => {\r\n        if (err || results.length === 0) {\r\n            return res.status(404).json({\r\n                success: false,\r\n                message: 'Registrant not found!'\r\n            });\r\n        }\r\n\r\n        // Respond with registrant details if found\r\n        const registrant = results[0];\r\n        res.status(200).json({\r\n            success: true,\r\n            registrant: {\r\n                name: registrant.names,\r\n                timeSlot: registrant.time_slot\r\n            }\r\n        });\r\n    });\r\n});\r\n\r\n// Start server\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => {\r\n    console.log(`QR Code Scanner server running on port ${PORT}`);\r\n});\r\n"],"mappings":";;AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,KAAK,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC/B,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMI,GAAG,GAAGL,OAAO,CAAC,CAAC;;AAErB;AACA,MAAMM,UAAU,GAAGJ,KAAK,CAACK,gBAAgB,CAAC;EACtCC,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE;AACd,CAAC,CAAC;AAEFN,UAAU,CAACO,OAAO,CAAEC,GAAG,IAAK;EACxB,IAAIA,GAAG,EAAE;IACLC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAACG,KAAK,CAAC;IACtD;EACJ;EACAF,OAAO,CAACG,GAAG,CAAC,oBAAoB,CAAC;AACrC,CAAC,CAAC;AAEFb,GAAG,CAACc,GAAG,CAAChB,UAAU,CAACiB,UAAU,CAAC;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC;AAClDhB,GAAG,CAACc,GAAG,CAACnB,OAAO,CAACsB,MAAM,CAAC,QAAQ,CAAC,CAAC;AACjCjB,GAAG,CAACc,GAAG,CAACnB,OAAO,CAACuB,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACAlB,GAAG,CAACmB,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACvBA,GAAG,CAACC,QAAQ,CAACvB,IAAI,CAACwB,IAAI,CAACC,SAAS,EAAE,mBAAmB,CAAC,CAAC;AAC3D,CAAC,CAAC;;AAEF;AACAxB,GAAG,CAACyB,IAAI,CAAC,UAAU,EAAE,CAACL,GAAG,EAAEC,GAAG,KAAK;EAC/B,MAAM;IAAEK,kBAAkB;IAAEC;EAAM,CAAC,GAAGP,GAAG,CAACQ,IAAI;;EAE9C;EACA,MAAMC,GAAG,GAAG,yEAAyE;EACrF5B,UAAU,CAAC6B,KAAK,CAACD,GAAG,EAAE,CAACH,kBAAkB,EAAEC,KAAK,CAAC,EAAE,CAAClB,GAAG,EAAEsB,OAAO,KAAK;IACjE,IAAItB,GAAG,IAAIsB,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE;MAC7B,OAAOX,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACf,IAAI,CAAC;QACxBgB,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACb,CAAC,CAAC;IACN;;IAEA;IACA,MAAMC,UAAU,GAAGL,OAAO,CAAC,CAAC,CAAC;IAC7BV,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACf,IAAI,CAAC;MACjBgB,OAAO,EAAE,IAAI;MACbE,UAAU,EAAE;QACRC,IAAI,EAAED,UAAU,CAACE,KAAK;QACtBC,QAAQ,EAAEH,UAAU,CAACI;MACzB;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC;;AAEF;AACA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AACrCzC,GAAG,CAAC4C,MAAM,CAACH,IAAI,EAAE,MAAM;EACnB/B,OAAO,CAACG,GAAG,CAAE,0CAAyC4B,IAAK,EAAC,CAAC;AACjE,CAAC,CAAC"}},"mtime":1727027193881}}